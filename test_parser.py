#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ WildBerries
"""

from wb_parser import WBParser

def test_basic_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–∞—Ä—Å–µ—Ä–∞"""
    parser = WBParser()
    
    # –¢–µ—Å—Ç —Å –ø—Ä–æ—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    query = "—Ç–µ–ª–µ—Ñ–æ–Ω"
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å: '{query}'")
    
    product_ids = parser.search_products(query)
    total = parser.get_total_products(query)
    
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: –Ω–∞–π–¥–µ–Ω–æ {len(product_ids)} ID –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
    print(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: {total}")
    
    if product_ids:
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω - –ø–æ–ª—É—á–µ–Ω—ã ID –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
        print(f"–ü–µ—Ä–≤—ã–µ 5 ID: {product_ids[:5]}")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω - ID –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
    
    return len(product_ids) > 0

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WB Parser")
    print("=" * 40)
    
    success = test_basic_functionality()
    
    print("=" * 40)
    if success:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
