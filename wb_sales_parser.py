#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
WB Sales Parser - –ø—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID, pics –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
"""

import argparse
import sys
from wb_parser import WBParser


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    parser = argparse.ArgumentParser(
        description='–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ WB –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º'
    )
    
    parser.add_argument(
        '-q', '--query',
        type=str,
        required=True,
        help='–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å'
    )
    
    parser.add_argument(
        '--cookies-file',
        type=str,
        required=True,
        help='–§–∞–π–ª —Å cookies –¥–ª—è Mayak API'
    )
    
    parser.add_argument(
        '--max-products',
        type=int,
        default=20,
        help='–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 20)'
    )
    
    parser.add_argument(
        '--show-table',
        action='store_true',
        help='–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã'
    )
    
    args = parser.parse_args()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º cookies
    try:
        with open(args.cookies_file, 'r', encoding='utf-8') as f:
            cookies = f.read().strip()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ cookies: {e}")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
    wb_parser = WBParser(mayak_cookies=cookies)
    
    print(f"üîç –ü–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É: '{args.query}'")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    products = wb_parser.get_products_detailed_info_with_pics(
        args.query, 
        page=1, 
        max_products=args.max_products
    )
    
    if not products:
        print("‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        sys.exit(1)
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(products)} —Ç–æ–≤–∞—Ä–æ–≤")
    
    if args.show_table:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        table = wb_parser.display_products_by_sales(products)
        print("\n" + table)
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
        print("\nüìã –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ (–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º):")
        print("ID —Ç–æ–≤–∞—Ä–∞ | –ü—Ä–æ–¥–∞–∂–∏ | –§–æ—Ç–æ")
        print("-" * 30)
        
        for i, product in enumerate(products, 1):
            product_id = product.get('id', 'N/A')
            sales = product.get('sales', 0)
            pics = product.get('pics', 0)
            print(f"{product_id} | {sales:,} | {pics}")


if __name__ == "__main__":
    main()

