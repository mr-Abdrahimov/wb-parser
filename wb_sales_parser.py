#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
WB Sales Parser - –ø—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID, pics –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
"""

import argparse
import logging
import sys
from wb_parser import WBParser
from mayak_api import parse_cookies_string

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    datefmt='%H:%M:%S'
)
logger = logging.getLogger(__name__)

def main():
    parser = argparse.ArgumentParser(
        description='–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ WB –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
        formatter_class=argparse.RawTextHelpFormatter
    )
    
    parser.add_argument(
        '-q', '--query',
        type=str,
        required=True,
        help='–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å'
    )
    parser.add_argument(
        '--cookies-file',
        type=str,
        default='cookies.txt',
        help='–§–∞–π–ª —Å cookies –¥–ª—è Mayak API (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: cookies.txt)'
    )
    parser.add_argument(
        '--max-products',
        type=int,
        default=20,
        help='–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 20)'
    )
    
    parser.add_argument(
        '--show-table',
        action='store_true',
        help='–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã'
    )
    
    parser.add_argument(
        '--show-images',
        action='store_true',
        help='–ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
    )
    
    parser.add_argument(
        '--images-only',
        action='store_true',
        help='–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–ø–æ –æ–¥–Ω–æ–π –Ω–∞ —Å—Ç—Ä–æ–∫—É)'
    )
    
    args = parser.parse_args()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º cookies
    mayak_cookies = None
    try:
        with open(args.cookies_file, 'r') as f:
            mayak_cookies = f.read().strip()
        if not mayak_cookies:
            logger.error("–§–∞–π–ª —Å cookies –ø—É—Å—Ç.")
            sys.exit(1)
    except FileNotFoundError:
        logger.error(f"–§–∞–π–ª —Å cookies –Ω–µ –Ω–∞–π–¥–µ–Ω: {args.cookies_file}")
        sys.exit(1)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ cookies: {e}")
        sys.exit(1)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä —Å cookies
    wb_parser = WBParser(mayak_cookies=mayak_cookies)
    
    logger.info(f"–ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: '{args.query}'")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å pics –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π
    combined_products = wb_parser.get_products_detailed_info_with_pics(
        args.query, 
        page=1, 
        max_products=args.max_products
    )
    
    if combined_products:
        if args.images_only:
            print("\nüñºÔ∏è –°—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:")
            for product in combined_products:
                image_urls = product.get('image_urls', [])
                for url in image_urls:
                    print(url)
        elif args.show_table:
            print("\n" + wb_parser.display_products_by_sales(combined_products))
            if args.show_images:
                print("\nüñºÔ∏è –°—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:")
                for product in combined_products:
                    product_id = product.get('id', 'N/A')
                    image_urls = product.get('image_urls', [])
                    if image_urls:
                        print(f"\n–¢–æ–≤–∞—Ä {product_id} ({len(image_urls)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π):")
                        for i, url in enumerate(image_urls, 1):
                            print(f"  {i}. {url}")
        else:
            print("\nüìã –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ (–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º):")
            print("ID —Ç–æ–≤–∞—Ä–∞ | –ü—Ä–æ–¥–∞–∂–∏ | –§–æ—Ç–æ")
            print("-" * 30)
            for product in combined_products:
                product_id = product.get('id', 'N/A')
                sales = product.get('sales', 0)
                pics = product.get('pics', 0)
                print(f"{product_id} | {sales:,} | {pics}")
            if args.show_images:
                print("\nüñºÔ∏è –°—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:")
                for product in combined_products:
                    product_id = product.get('id', 'N/A')
                    image_urls = product.get('image_urls', [])
                    if image_urls:
                        print(f"\n–¢–æ–≤–∞—Ä {product_id} ({len(image_urls)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π):")
                        for i, url in enumerate(image_urls, 1):
                            print(f"  {i}. {url}")
    else:
        logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö.")
        sys.exit(1)

if __name__ == "__main__":
    main()

