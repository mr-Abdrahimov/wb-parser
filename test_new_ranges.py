#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –Ω–æ–≤—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤ —Å–µ—Ä–≤–µ—Ä–æ–≤ WildBerries
"""

from wb_parser import WBParser


def test_server_ranges():
    """–¢–µ—Å—Ç –≤—Å–µ—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤ —Å–µ—Ä–≤–µ—Ä–æ–≤"""
    print("üß™ –¢–µ—Å—Ç –Ω–æ–≤—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤ —Å–µ—Ä–≤–µ—Ä–æ–≤ WB...")
    
    parser = WBParser()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤
    test_ranges = [
        # –ì—Ä–∞–Ω–∏—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
        (0, "01"),      # 0 <= vol <= 143
        (143, "01"),
        (144, "02"),    # vol <= 287
        (287, "02"),
        (288, "03"),    # vol <= 431
        (431, "03"),
        (432, "04"),    # vol <= 719
        (719, "04"),
        (720, "05"),    # vol <= 1007
        (1007, "05"),
        (1008, "06"),   # vol <= 1061
        (1061, "06"),
        (1062, "07"),   # vol <= 1115
        (1115, "07"),
        (1116, "08"),   # vol <= 1169
        (1169, "08"),
        (1170, "09"),   # vol <= 1313
        (1313, "09"),
        (1314, "10"),   # vol <= 1601
        (1601, "10"),
        (1602, "11"),   # vol <= 1655
        (1655, "11"),
        (1656, "12"),   # vol <= 1919
        (1919, "12"),
        (1920, "13"),   # vol <= 2045
        (2045, "13"),
        (2046, "14"),   # vol <= 2189
        (2189, "14"),
        (2190, "15"),   # vol <= 2405
        (2405, "15"),
        (2406, "16"),   # vol <= 2621
        (2621, "16"),
        (2622, "17"),   # vol <= 2837
        (2837, "17"),
        (2838, "18"),   # vol <= 3053
        (3053, "18"),
        (3054, "19"),   # vol <= 3269
        (3269, "19"),
        (3270, "20"),   # vol <= 3485
        (3485, "20"),
        (3486, "21"),   # vol <= 3701
        (3701, "21"),
        (3702, "22"),   # vol <= 3917
        (3917, "22"),
        (3918, "23"),   # vol <= 4133
        (4133, "23"),
        (4134, "24"),   # vol <= 4349
        (4349, "24"),
        (4350, "25"),   # vol <= 4565
        (4565, "25"),
        (4566, "26"),   # vol <= 4877
        (4877, "26"),
        (4878, "27"),   # vol <= 5189
        (5189, "27"),
        (5190, "28"),   # vol <= 5501
        (5501, "28"),
        (5502, "29"),   # vol <= 5813
        (5813, "29"),
        (5814, "30"),   # vol <= 6125
        (6125, "30"),
        (6126, "31"),   # vol <= 6437
        (6437, "31"),
        (6438, "32"),   # default
        (10000, "32"),  # –±–æ–ª—å—à–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    ]
    
    all_passed = True
    failed_cases = []
    
    for vol, expected_host in test_ranges:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π product_id
        product_id = vol * 100000 + 12345  # –¥–æ–±–∞–≤–ª—è–µ–º 5 —Ü–∏—Ñ—Ä
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–¥–Ω—É —Å—Å—ã–ª–∫—É
        image_urls = parser.generate_image_urls(product_id, 1)
        
        if not image_urls:
            failed_cases.append(f"vol {vol}: –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å—Å—ã–ª–∫–∏")
            all_passed = False
            continue
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö–æ—Å—Ç –≤ —Å—Å—ã–ª–∫–µ
        url = image_urls[0]
        expected_part = f"basket-{expected_host}.wbbasket.ru"
        
        if expected_part in url:
            print(f"  ‚úÖ vol {vol:>4} ‚Üí basket-{expected_host}")
        else:
            print(f"  ‚ùå vol {vol:>4} ‚Üí –æ–∂–∏–¥–∞–ª—Å—è basket-{expected_host}, –ø–æ–ª—É—á–µ–Ω: {url}")
            failed_cases.append(f"vol {vol}: –æ–∂–∏–¥–∞–ª—Å—è {expected_host}")
            all_passed = False
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(test_ranges) - len(failed_cases)}/{len(test_ranges)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏")
    
    if failed_cases:
        print("\n‚ùå –ù–µ—É–¥–∞—á–Ω—ã–µ —Ç–µ—Å—Ç—ã:")
        for case in failed_cases:
            print(f"  - {case}")
    else:
        print("üéâ –í—Å–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    
    return all_passed


def demo_new_servers():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤"""
    print("\nüéØ –î–ï–ú–û: –ù–æ–≤—ã–µ —Å–µ—Ä–≤–µ—Ä—ã WildBerries")
    print("=" * 50)
    
    parser = WBParser()
    
    demo_cases = [
        (500012345, "–°–µ—Ä–≤–µ—Ä 27 (vol 5000)"),
        (320012345, "–°–µ—Ä–≤–µ—Ä 19 (vol 3200)"),  
        (450012345, "–°–µ—Ä–≤–µ—Ä 24 (vol 4500)"),
        (600012345, "–°–µ—Ä–≤–µ—Ä 29 (vol 6000)"),
        (700012345, "–°–µ—Ä–≤–µ—Ä 32 (vol 7000, default)"),
    ]
    
    for product_id, description in demo_cases:
        vol = product_id // 100000
        image_urls = parser.generate_image_urls(product_id, 2)
        
        if image_urls:
            print(f"\n{description}:")
            print(f"  ID: {product_id}")
            print(f"  vol: {vol}")
            print(f"  –°—Å—ã–ª–∫–∏:")
            for i, url in enumerate(image_urls, 1):
                print(f"    {i}. {url}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤ —Å–µ—Ä–≤–µ—Ä–æ–≤ WB")
    print("=" * 60)
    
    success = test_server_ranges()
    demo_new_servers()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –í—Å–µ –Ω–æ–≤—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞–º–∏")
    
    return success


if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)
